# =====================================================
# Script: DeleteAppPoolFolders_MultipleServers.ps1
# Description: Deletes folders related to multiple application pools on multiple servers one by one.
# Author: Your Name
# Date: YYYY-MM-DD
# =====================================================

# -------------------------
# Configuration Section
# -------------------------

# Define the servers
$Servers = @("Server1", "Server2", "Server3")  # Replace with actual server names or IP addresses

# Define the application pools whose folders need to be deleted
$AppPools = @("AppPool1", "AppPool2", "AppPool3")  # Replace with actual app pool names

# Define the base directory where app pool folders are located
$BasePath = "C:\inetpub\wwwroot"

# Define the path for the log file
$LogFile = "C:\Scripts\DeleteAppPoolFolders_MultipleServers.log"

# -------------------------
# Function Definitions
# -------------------------

# Function to log messages with timestamps
function Write-Log {
    param (
        [string]$Message,
        [string]$LogPath = $LogFile
    )
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logMessage = "$timestamp - $Message"
    Write-Output $logMessage
    if ($LogPath) {
        Add-Content -Path $LogPath -Value $logMessage
    }
}

# Function to delete folders for specific app pools on a specific server
function Remove-AppPoolFolders {
    param (
        [string]$ServerName,
        [string[]]$AppPools,
        [string]$BasePath
    )

    Write-Log "Starting deletion process on server: $ServerName"

    foreach ($AppPool in $AppPools) {
        # Construct the folder path
        $FolderPath = Join-Path -Path $BasePath -ChildPath $AppPool

        try {
            # Check if the folder exists remotely
            $Command = {
                param ($FolderPath)
                if (Test-Path -Path $FolderPath) {
                    Remove-Item -Path $FolderPath -Recurse -Force -ErrorAction Stop
                    return "Successfully deleted: $FolderPath"
                } else {
                    return "Folder not found: $FolderPath"
                }
            }

            # Invoke the command on the remote server
            $Result = Invoke-Command -ComputerName $ServerName -ScriptBlock $Command -ArgumentList $FolderPath
            Write-Log "Server: $ServerName - $Result"
        }
        catch {
            Write-Log "Error on server $ServerName while processing folder $FolderPath: $_"
        }
    }

    Write-Log "Completed deletion process on server: $ServerName"
}

# -------------------------
# Main Execution Section
# -------------------------

# Start logging
Write-Log "Script execution started."

# Iterate through each server
foreach ($Server in $Servers) {
    # Call the function to delete app pool folders for each server
    Remove-AppPoolFolders -ServerName $Server -AppPools $AppPools -BasePath $BasePath
}

# End logging
Write-Log "Script execution completed."
